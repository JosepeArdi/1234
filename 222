 
ERROR at setup of test_posts_page_pk_published_location ___________________________________________________

user_client = <django.test.client.Client object at 0x7f30159754c0>, post_with_published_location = <Post: Price Republican Deep Door Miss Will>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
__________________________________________________ ERROR at setup of test_posts_page_pk_unpublished_location __________________________________________________

user_client = <django.test.client.Client object at 0x7f30159af4f0>, post_with_published_location = <Post: Usually Next Station Responsibility Somebody Itself>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/2/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/2/
_______________________________________________ ERROR at setup of test_posts_page_pk_check_context_keys[title] ________________________________________________

user_client = <django.test.client.Client object at 0x7f30158f0fa0>, post_with_published_location = <Post: Such Enter Myself Five Up Piece>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
________________________________________________ ERROR at setup of test_posts_page_pk_check_context_keys[text] ________________________________________________

user_client = <django.test.client.Client object at 0x7f30158ac220>, post_with_published_location = <Post: Bar Contain Pick Say Them Often>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
________________________________________________ ERROR at setup of test_posts_page_pk_check_context_keys[key2] ________________________________________________

user_client = <django.test.client.Client object at 0x7f3015892a60>, post_with_published_location = <Post: Dark Their To Suffer Myself Turn>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
________________________________________________ ERROR at setup of test_posts_page_pk_check_context_keys[key3] ________________________________________________

user_client = <django.test.client.Client object at 0x7f30158b38b0>, post_with_published_location = <Post: White Itself Where Detail Past Each>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
________________________________________________ ERROR at setup of test_posts_page_pk_check_context_keys[key4] ________________________________________________

user_client = <django.test.client.Client object at 0x7f301583dd30>, post_with_published_location = <Post: Clear Recognize Long Hit Create Dark>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
_______________________________________ ERROR at setup of test_posts_page_pk_post_with_published_location_and_category ________________________________________

user_client = <django.test.client.Client object at 0x7f3015834940>, post_with_published_location = <Post: Window Care Now Door Fact Others>

    @pytest.fixture
    def post_context_key(user_client, post_with_published_location):
        check_post_page_msg = (
            'Убедитесь, что страница публикации '
            'существует и отображается в соответствии с заданием.'
        )
        try:
            post_response = user_client.get(
                f'/posts/{post_with_published_location.id}/')
        except Exception:
            raise AssertionError(check_post_page_msg)
>       assert post_response.status_code == HTTPStatus.OK, check_post_page_msg
E       AssertionError: Убедитесь, что страница публикации существует и отображается в соответствии с заданием.
E       assert 404 == <HTTPStatus.OK: 200>
E        +  where 404 = <HttpResponseNotFound status_code=404, "text/html">.status_code
E        +  and   <HTTPStatus.OK: 200> = HTTPStatus.OK

tests/conftest.py:61: AssertionError
-------------------------------------------------------------------- Captured stderr setup --------------------------------------------------------------------
Not Found: /posts/1/
--------------------------------------------------------------------- Captured log setup ----------------------------------------------------------------------
WARNING  django.request:log.py:224 Not Found: /posts/1/
========================================================================== FAILURES ===========================================================================
___________________________________________________________ test_category_page_pub_date_later_today ___________________________________________________________

user_client = <django.test.client.Client object at 0x7f3015ae6730>
posts_with_future_date = [<Post: Now Yes Simply College Now Forward>, <Post: Entire Detail Able Me Student Hold>, <Post: Surface Nothing General Ground Within Action>, <Post: Save Deal Example Yard Arrive Believe>]
category_page_post_list_context_key = 'post_list'

    def test_category_page_pub_date_later_today(
            user_client,
            posts_with_future_date,
            category_page_post_list_context_key
    ):
        if not posts_with_future_date[0].category:
            raise AssertionError(
                'В модели `Post` в атрибуте `category` '
                'проверьте значение параметра `blank` на соответствие заданию.')
        category_slug = posts_with_future_date[0].category.slug
        response = user_client.get(f'/category/{category_slug}/')
        if response.status_code == HTTPStatus.OK:
            context_post_list = response.context.get(
                category_page_post_list_context_key)
>           assert len(context_post_list) == 0, (
                'Убедитесь, что на странице категории '
                'не выводятся записи с датой публикации в будущем.'
            )
E           AssertionError: Убедитесь, что на странице категории не выводятся записи с датой публикации в будущем.
E           assert 1 == 0
E            +  where 1 = len(<QuerySet [<Post: Now Yes Simply College Now Forward>]>)

tests/test_category_page_views.py:107: AssertionError
_____________________________________________________________ test_posts_page_pk_unpublished_post _____________________________________________________________

user_client = <django.test.client.Client object at 0x7f3015866d90>, unpublished_post = <Post: Mother Development Performance Travel Half Perhaps>

    def test_posts_page_pk_unpublished_post(user_client, unpublished_post):
        response = user_client.get(f'/posts/{unpublished_post.id}/')
>       assert response.status_code == HTTPStatus.NOT_FOUND, (
            'Убедитесь, что страница поста, снятого с публикации, '
            'возвращает статус 404.'
        )
E       AssertionError: Убедитесь, что страница поста, снятого с публикации, возвращает статус 404.
E       assert 200 == <HTTPStatus.NOT_FOUND: 404>
E        +  where 200 = <HttpResponse status_code=200, "text/html; charset=utf-8">.status_code
E        +  and   <HTTPStatus.NOT_FOUND: 404> = HTTPStatus.NOT_FOUND

tests/test_post_detail_views.py:94: AssertionError
___________________________________________________________ test_posts_page_pk_category_unpublished ___________________________________________________________

user_client = <django.test.client.Client object at 0x7f3015830bb0>, post_with_unpublished_category = <Post: Rule Day Begin Why Half Form>

    def test_posts_page_pk_category_unpublished(
            user_client,
            post_with_unpublished_category,
    ):
        response = user_client.get(f'/posts/{post_with_unpublished_category.id}/')
>       assert response.status_code == HTTPStatus.NOT_FOUND, (
            'Убедитесь, что если посту присвоена категория, снятая с публикации, '
            'то отдельная страница этого поста возвращает статус 404.'
        )
E       AssertionError: Убедитесь, что если посту присвоена категория, снятая с публикации, то отдельная страница этого поста возвращает статус 404.
E       assert 200 == <HTTPStatus.NOT_FOUND: 404>
E        +  where 200 = <HttpResponse status_code=200, "text/html; charset=utf-8">.status_code
E        +  and   <HTTPStatus.NOT_FOUND: 404> = HTTPStatus.NOT_FOUND

tests/test_post_detail_views.py:114: AssertionError
__________________________________________________________________ test_pub_date_later_today __________________________________________________________________

user_client = <django.test.client.Client object at 0x7f30156258b0>
posts_with_future_date = [<Post: New Various Clear Degree Read Relate>, <Post: Company Good Say Card Rise These>, <Post: Today Heavy Offer Account Already Mother>, <Post: Information Same Water Recently Against Even>]
main_page_post_list_context_key = 'post_list'

    def test_pub_date_later_today(
            user_client, posts_with_future_date, main_page_post_list_context_key):
        response = user_client.get('/')
        context_post_list = response.context.get(main_page_post_list_context_key)
>       assert len(context_post_list) == 0, (
            'Если дата публикации поста позже текущего времени, '
            'он не должен отображаться на главной странице.'
        )
E       AssertionError: Если дата публикации поста позже текущего времени, он не должен отображаться на главной странице.
E       assert 4 == 0
E        +  where 4 = len(<QuerySet [<Post: Information Same Water Recently Against Even>, <Post: Today Heavy Offer Account Already Mother>, <Post: Company Good Say Card Rise These>, <Post: New Various Clear Degree Read Relate>]>)

tests/test_posts_page_views.py:84: AssertionError
=================================================================== short test summary info ===================================================================
FAILED tests/test_category_page_views.py::test_category_page_pub_date_later_today - AssertionError: Убедитесь, что на странице категории не выводятся записи...
FAILED tests/test_post_detail_views.py::test_posts_page_pk_unpublished_post - AssertionError: Убедитесь, что страница поста, снятого с публикации, возвращае...
FAILED tests/test_post_detail_views.py::test_posts_page_pk_category_unpublished - AssertionError: Убедитесь, что если посту присвоена категория, снятая с пу...
FAILED tests/test_posts_page_views.py::test_pub_date_later_today - AssertionError: Если дата публикации поста позже текущего времени, он не должен отображат...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_published_location - AssertionError: Убедитесь, что страница публикации существует и отображается ...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_unpublished_location - AssertionError: Убедитесь, что страница публикации существует и отображаетс...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_check_context_keys[title] - AssertionError: Убедитесь, что страница публикации существует и отобра...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_check_context_keys[text] - AssertionError: Убедитесь, что страница публикации существует и отображ...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_check_context_keys[key2] - AssertionError: Убедитесь, что страница публикации существует и отображ...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_check_context_keys[key3] - AssertionError: Убедитесь, что страница публикации существует и отображ...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_check_context_keys[key4] - AssertionError: Убедитесь, что страница публикации существует и отображ...
ERROR tests/test_post_detail_views.py::test_posts_page_pk_post_with_published_location_and_category - AssertionError: Убедитесь, что страница публикации сущ...
=========================================================== 4 failed, 70 passed, 8 errors in 2.73s ============================================================
